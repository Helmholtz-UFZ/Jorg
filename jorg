#!/usr/bin/env bash

##################################################################
#
# jorg - Circularization and improvement of metagenomic bins
# 
# Authors: Lauren Lui (lmlui@lbl.gov), Torben Nielsen, Adam Arkin
#
# $1 = Kmer value for baiting, default is 33
# $2 = original bin fasta file 
# $3 = file with reads
# $4 = minimum coverage value
# $5 = number of iterations
#
# Example usage: jorg 33 bin_1.fasta  myreads.fastq.gz 200 5
#
##################################################################

####### Prep files #######

# Get the bin ID by removing the file extension
filepath="${2}"
filename=$(basename "$filepath")
binID=$(echo "${filename%.*}" )

# Copy original file to avoid rewriting over it
outfile="$binID".out.fasta
cp ${2} "$outfile"

# Make manifest file for MIRA
cat manifest_template.conf | sed "s/XXX/$binID/g" > manifest.conf

# Create file for contig stats of iterations
printf "contig_name\tlength\tGC_percent\tcumulative_length\n" > iterations.txt


####### Iterate recruiting reads and MIRA assembly #######

mkdir -p Iterations

for (( i = 1; i <= $5; i++ ))
do
	echo "Iteration "${i} >> iterations.txt
	
	# Recruit reads with mirabait
	mirabait -k ${1} -b "$outfile" -P ${3} -o "$binID".fastq &> mirabait.log

	#Check if the reads file is empty.  Seqtk will hang if the input file is empty.
	if [ ! -s "$binID".fastq ]
	then
        	echo "Error: fastq file empty."
        	exit 1
	fi

	# Deinterleave reads
	seqtk seq -1 -C ${binID}.fastq | seqtk rename - ${binID}_ | sed "s/\(^@${binID}_[0-9][0-9]*$\)/\1\/1/" > ${binID}_1.fastq
	seqtk seq -2 -C ${binID}.fastq | seqtk rename - ${binID}_ | sed "s/\(^@${binID}_[0-9][0-9]*$\)/\1\/2/" > ${binID}_2.fastq

	# Run MIRA assembly
	mira manifest.conf &> mira.log

	# Get MIRA assembly file
	cp "$binID"_assembly/"$binID"_d_results/"$binID"_out.unpadded.fasta "$binID"_MIRA.fasta

	# Get contigs that are greater than 1000bp and have coverage greater than the indicated minimum
	awk -v coverage_min="$4" '{if($2 >= 1000 && $6 >= coverage_min || NR == 1) print}' "$binID"_assembly/"$binID"_d_info/"$binID"_info_contigstats.txt > list.txt

	#Check if the outfile is empty.  Seqtk will hang if the input file is empty.
	if [ ! -s "$outfile" ]
        then
                echo "Error: fasta outfile empty."
                exit 1
        fi

  #Output assembly based on stats collected in list.txt
	seqtk subseq "$binID"_MIRA.fasta list.txt > "$outfile"
	
	# Output contig stats on assembly
	# contig_name  length  %GC  cumulative_length
	seqtk comp $binID.out.fasta | sort -k 2,2nr | awk '{printf "%-40s %8d %7.2f %8d\n", $1, $2, 100.0 * ($4 + $5)/($3 + $4 + $5 + $6), sum += $2}' >> iterations.txt

	cp $binID.out.fasta Iterations/$binID_${i}.fasta
done
